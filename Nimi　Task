Private Sub GenerateBarcodesAndSetValues()
    Dim cell As Range
    Dim targetCells As Variant
    Dim i As Integer
    Dim productName As String
    Dim ao7Value As Variant
    Dim shp As Shape
    
    ' AO7の値を取得
    Dim sourceCell As Range
    Set sourceCell = Range("AO7")
    
    ' バーコードを表示するセル範囲を定義
    targetCells = Array("F11", "O11", "X11", "F23", "O23", "X23", "F35", "O35", "X35")
    
    ' スクリーン更新をオフにする
    Application.ScreenUpdating = False

    ' 指定されたセル内のすべての既存のバーコードを削除
    For Each shp In ActiveSheet.Shapes
        If shp.Type = msoOLEControlObject Then
            If InStr(shp.Name, "Barcode") > 0 Then
                shp.Delete
            End If
        End If
    Next shp

    ' 指定されたセルを順番に処理し、バーコードを生成
    For i = LBound(targetCells) To UBound(targetCells)
        Set cell = Range(targetCells(i))
        If cell.Value <> "" Then
            With ActiveSheet.OLEObjects.Add(ClassType:="BARCODE.BarCodeCtrl.1") ' バーコードコントロールを追加
                .Name = cell.Address & "_Barcode"
                .Object.Style = 7 ' バーコードスタイルを "code 128" に設定
                .Left = cell.Left + 4 ' バーコード左側をセルの左側から4ポイント
                .Top = cell.Top + 4 ' バーコード上側をセルの上側から4ポイント
                .Height = 23 ' バーコードの高さを23ポイントに設定
                .Width = 108 ' バーコードの幅を108ポイントに設定
                .Object.Value = cell.Value ' バーコードに値を設定
            End With
        End If
    Next i

    ' 行番号と列番号の基準を定義
    Dim baseRows As Variant, baseCols As Variant
    Dim rowNum As Variant, colNum As Variant
    Dim targetCellIndex As Integer

    baseRows = Array(11, 23, 35) ' 対応する行番号
    baseCols = Array("A", "J", "S") ' 対応する列番号

    targetCellIndex = 4 ' AE列の開始行（AE4）

    ' 一括形式コピー
    For Each rowNum In baseRows
        For Each colNum In baseCols
            productName = Cells(targetCellIndex, "AE").Value
            If Left(productName, 1) = "■" Then
                Set cell = Range(colNum & rowNum)
                cell.Value = sourceCell.Value
                
                ' フォントと書式属性を個別にコピー
                cell.Font.Name = sourceCell.Font.Name
                cell.Font.Size = sourceCell.Font.Size
                cell.Font.Color = sourceCell.Font.Color
                cell.Font.Bold = sourceCell.Font.Bold
                cell.Interior.Color = sourceCell.Interior.Color
                cell.HorizontalAlignment = sourceCell.HorizontalAlignment
                cell.VerticalAlignment = sourceCell.VerticalAlignment
            End If
            targetCellIndex = targetCellIndex + 1
        Next colNum
    Next rowNum

    ' スクリーン更新を復元
    Application.ScreenUpdating = True

    MsgBox "処が完了しました！"
End Sub

Private Sub DeleteAllBarcodes()
    Dim shp As Shape
    Dim oleObj As OLEObject
    Dim baseRows As Variant
    Dim baseCols As Variant
    Dim rowNum As Variant
    Dim colNum As Variant
    Dim targetCell As Range

    ' 遍历工作表中的所有形状对象
    For Each shp In ActiveSheet.Shapes
        ' 检查形状是否是条形码控件（名称包含 "Barcode"）
        If InStr(shp.Name, "Barcode") > 0 Then
            shp.Delete ' 删除条形码形状
        End If
    Next shp

    ' 遍历工作表中的所有 OLEObjects（包含条形码控件）
    For Each oleObj In ActiveSheet.OLEObjects
        ' 检查对象名称是否包含 "Barcode"
        If InStr(oleObj.Name, "Barcode") > 0 Then
            oleObj.Delete ' 删除条形码控件
        End If
    Next oleObj

    ' 定义行号和列号的基准
    baseRows = Array(11, 23, 36) ' 行号
    baseCols = Array("A", "J", "S") ' 列号

    ' 遍历行号和列号，动态生成目标单元格
    For Each rowNum In baseRows
        For Each colNum In baseCols
            Set targetCell = ActiveSheet.Range(colNum & rowNum).MergeArea
            targetCell.ClearContents                ' 清除内容
            targetCell.Interior.ColorIndex = xlNone ' 清除背景色
        Next colNum
    Next rowNum

    MsgBox "所有条形码及指定单元格的内容和背景色已删除！"
End Sub

