
Sub CalculatePredictedSales()
    Dim wsOrderSheet As Worksheet, wsGeneralLeadTime As Worksheet
    Dim nrow As Long, i As Integer
    Dim orderDate As Date, dayOfWeek As Integer
    Dim brandCode As String, productCode As String
    Dim recentAvg As Variant, leadTimeToday As Variant, nextLeadTime As Variant
    Dim generalLeadTimeRow As Range
    Dim daysToNextOrder As Integer, totalDays As Integer
    Dim firstArrivalDays As Integer, secondArrivalDays As Integer
    Dim isEverydayOrderable As Boolean
    Dim logFile As String, logText As String
    Dim fileNum As Integer

    ' ログファイルのパスを設定
    logFile = ThisWorkbook.Path & "\DebugLog.txt"
    fileNum = FreeFile

    ' ログファイルを開いて書き込み
    Open logFile For Output As #fileNum

    ' ワークシートの設定
    Set wsOrderSheet = ThisWorkbook.Sheets("食品全体（原紙）")
    Set wsGeneralLeadTime = ThisWorkbook.Sheets("一般リードタイム")

    ' 現在の注文日と曜日を取得
    orderDate = wsOrderSheet.Range("T2").Value
    If IsEmpty(orderDate) Then
        Print #fileNum, "注文日(T2)が空です。データを確認してください！"
        Close #fileNum
        MsgBox "注文日(T2)が空です。データを確認してください！", vbExclamation
        Exit Sub
    End If
    dayOfWeek = Weekday(orderDate, vbSunday) ' 1=日曜日, 2=月曜日, ..., 7=土曜日

    Print #fileNum, "処理開始、注文日: " & Format(orderDate, "yyyy-mm-dd") & ", 曜日: " & dayOfWeek

    ' 注文表の商品の処理をループ
    For nrow = 5 To wsOrderSheet.Cells(wsOrderSheet.Rows.Count, "A").End(xlUp).row
        brandCode = Trim(wsOrderSheet.Cells(nrow, "A").Value)
        productCode = Trim(wsOrderSheet.Cells(nrow, "B").Value) ' 商品コードを取得
        wsOrderSheet.Cells(nrow, "P").ClearContents ' 古い値をクリア

        If brandCode = "" Then
            Print #fileNum, nrow & "行目のブランドコードが空です。処理をスキップします。商品コード: " & productCode
            GoTo SkipBrand
        End If

        ' 一般リードタイム表でブランドに対応するデータを見つける
        Set generalLeadTimeRow = wsGeneralLeadTime.Range("A:A").Find(brandCode, LookIn:=xlValues, LookAt:=xlWhole)
        If Not generalLeadTimeRow Is Nothing Then
            ' 直近平均値を取得
            recentAvg = wsOrderSheet.Cells(nrow, "O").Value
            If IsNumeric(recentAvg) And recentAvg > 0 Then
                recentAvg = CDbl(recentAvg)

                ' 今日注文可能かを確認
                leadTimeToday = wsGeneralLeadTime.Cells(generalLeadTimeRow.row, dayOfWeek + 1).Value
                If Trim(CStr(leadTimeToday)) = "×" Or IsEmpty(leadTimeToday) Then
                    Print #fileNum, "ブランド: " & brandCode & "、商品コード: " & productCode & "、今日は注文不可またはデータが空です。スキップします。"
                    GoTo SkipBrand
                End If

                ' 最初の到着日数を記録
                If IsNumeric(leadTimeToday) Then
                    firstArrivalDays = CInt(leadTimeToday)
                Else
                    Print #fileNum, "ブランド: " & brandCode & "、商品コード: " & productCode & "、今日の到着日数が無効です: " & leadTimeToday
                    GoTo SkipBrand
                End If

                Print #fileNum, "ブランド: " & brandCode & "、商品コード: " & productCode & "、今日の到着日数: " & firstArrivalDays

                ' 毎日注文可能かを確認
                isEverydayOrderable = True
                For i = 1 To 7
                    If Trim(CStr(wsGeneralLeadTime.Cells(generalLeadTimeRow.row, i + 1).Value)) = "×" Or _
                       IsEmpty(wsGeneralLeadTime.Cells(generalLeadTimeRow.row, i + 1).Value) Then
                        isEverydayOrderable = False
                        Exit For
                    End If
                Next i

                If isEverydayOrderable Then
                    ' 毎日注文可能なら、総日数は2回の注文の到着周期
                    totalDays = firstArrivalDays * 2
                    Print #fileNum, "ブランド: " & brandCode & "、商品コード: " & productCode & "、毎日注文可能、総日数: " & totalDays
                Else
                    ' 次の注文日を探す
                    secondArrivalDays = 0
                    daysToNextOrder = 0
                    For i = 1 To 6 ' 最大で次の週を確認
                        Dim nextDayOfWeek As Integer
                        nextDayOfWeek = (dayOfWeek + i - 1) Mod 7 + 1 ' 日曜日からループ
                        nextLeadTime = wsGeneralLeadTime.Cells(generalLeadTimeRow.row, nextDayOfWeek + 1).Value

                        If IsNumeric(nextLeadTime) Then
                            daysToNextOrder = i ' 次の注文までの日数
                            secondArrivalDays = CInt(nextLeadTime) ' 次の到着に必要な日数
                            Print #fileNum, "ブランド: " & brandCode & "、商品コード: " & productCode & "、次の注文日: " & Format(orderDate + daysToNextOrder, "yyyy-mm-dd") & "、到着に必要な日数: " & secondArrivalDays
                            Exit For
                        End If
                    Next i

                    ' 次の注文日が見つからなければスキップ
                    If daysToNextOrder = 0 Then
                        Print #fileNum, "ブランド: " & brandCode & "、商品コード: " & productCode & "、次の注文日が見つかりません。スキップします。"
                        GoTo SkipBrand
                    End If

                    ' 総日数を計算
                    totalDays = firstArrivalDays + secondArrivalDays + daysToNextOrder
                    Print #fileNum, "ブランド: " & brandCode & "、商品コード: " & productCode & "、総日数: " & totalDays
                End If

                ' 予測売れ数を計算
                wsOrderSheet.Cells(nrow, "P").Value = recentAvg * totalDays
                Print #fileNum, "ブランド: " & brandCode & "、商品コード: " & productCode & "、直近平均値: " & recentAvg & "、予測売れ数: " & wsOrderSheet.Cells(nrow, "P").Value
            Else
                Print #fileNum, "ブランド: " & brandCode & "、商品コード: " & productCode & "、直近平均値が無効または0です: " & recentAvg
            End If
        Else
            Print #fileNum, "ブランド: " & brandCode & "、商品コード: " & productCode & "、一般リードタイム表に一致する項目が見つかりません。"
        End If
SkipBrand:
    Next nrow

    ' ログファイルを閉じる
    Close #fileNum

    MsgBox "予測売れ数が算出されました。", vbInformation
End Sub

